#include <zephyr/dt-bindings/pwm/pwm.h>
#include <zephyr/dt-bindings/led/led.h>

/*
&wifi {
        status = "okay";
};
&adc {
      status = "okay";
};
*/


/ {

    leds {
        compatible = "gpio-leds";
        led_ready: led_ready {
            gpios = <&gpio0 13 ( GPIO_ACTIVE_HIGH) > ;
        };
    };
    buttons {
        compatible = "gpio-keys";
        button0: button_0 {
     	    gpios = < &gpio0 4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW) >;
     	    label = "button 0";
   	    };
   	    button1: button_1 {
            gpios = < &gpio0 5 (GPIO_PULL_UP | GPIO_ACTIVE_LOW) >;
     	    label = "button 1";
        };
    };
    motion_sensors {
        compatible = "gpio-keys";
   	motionsensor: motionsensor {
   	    gpios = < &gpio0 20 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH) >;
	    label = "motion sensor";
        };	   
    };
    aliases {
//        sensor = &adc;
    };
    zephyr,user {
//      io-channels = <&adc 0>;
    };
};

    
&i2c0 {
    pinctrl-0 = <&i2c0_default>; // default is SDA = GP4, SCL = GP5
    pinctrl-names = "default";
    status = "okay";
    clock-frequency = <I2C_BITRATE_STANDARD>;

    st25dv: st25dv@a6 {
        compatible = "st,st25dv";
        reg = <0xa6>;
        interrupt-gpios = <&gpio0 15 GPIO_ACTIVE_LOW>;
        status = "okay";
    };
};


&flash0 {
	status = "okay";
	partitions {
        compatible = "fixed-partitions";
	    #address-cells = < 0x1 >;
		#size-cells = < 0x1 >;
		/* Reserved memory for the second stage bootloader */
		second_stage_bootloader: partition@0 {
			label = "second_stage_bootloader";
			reg = <0x00000000 0x100>;
			read-only;
		};

		/*
		 * Usable flash. Starts at 0x100, after the bootloader. The partition
		 * size is 2MB minus the 0x100 bytes taken by the bootloader.
		 */
		code_partition: partition@100 {
			label = "code-partition";
			reg = <0x100 (DT_SIZE_M(2) - 0x100)>;
			read-only;
		};
		storage_partition: partition@1F0000 {
			label = "storage";
			reg = < 0x1F0000 0x6000 >;
		};
    };
};
